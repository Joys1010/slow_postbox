package com.example.slow_postbox;import androidx.annotation.RequiresApi;import androidx.appcompat.app.AppCompatActivity;import android.app.DatePickerDialog;import android.database.sqlite.SQLiteDatabase;import android.os.Build;import android.os.Bundle;import android.view.Gravity;import android.view.View;import android.widget.Button;import android.widget.DatePicker;import android.widget.EditText;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.TextView;import android.widget.Toast;import java.text.SimpleDateFormat;import java.time.LocalDate;import java.util.Calendar;import java.util.Date;public class WritePost extends AppCompatActivity {    private static final String TAG= "myDebug";    Calendar now = Calendar.getInstance();    int y = now.get(Calendar.YEAR);    int m = now.get(Calendar.MONTH)+1;    int d = now.get(Calendar.DATE);    private TextView textView_Date;    private DatePickerDialog.OnDateSetListener callbackMethod;    Button btn_save;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_write_post);        this.initView();        this.initListener();    }    public void initView() {        textView_Date = (TextView) findViewById(R.id.date);        textView_Date.setText(y+"-"+m+"-"+d);    }    public void initListener() {        callbackMethod = new DatePickerDialog.OnDateSetListener() {            @Override            public void onDateSet(DatePicker datePicker, int year, int month, int day) {                y = year;                m = month+1;                d = day;                textView_Date.setText(y + "-" + m + "-" + d);            }        };    }    public void chooseDate(View view) {        DatePickerDialog dialog = new DatePickerDialog(this, callbackMethod, 2021,11,2);        Calendar calendar = Calendar.getInstance();        dialog.getDatePicker().setMinDate(calendar.getTimeInMillis());        dialog.show();    }    public void save(View view) {        //제목        EditText tmp = (EditText)findViewById(R.id.title);        String postTitle = "'"+tmp.getText().toString()+"'";        //작성자        RadioGroup radioGroup = (RadioGroup) findViewById(R.id.radioGroup);        RadioButton radioButton = (RadioButton) findViewById(radioGroup.getCheckedRadioButtonId());        String postWriter = "'"+radioButton.getText().toString()+"'";        //내용        EditText tmp2 = (EditText)findViewById(R.id.content);        String postContent= "'"+tmp2.getText().toString()+"'";        //날짜        Calendar cal = Calendar.getInstance();        cal.set(Calendar.YEAR,y);        cal.set(Calendar.MONTH,m-1);        cal.set(Calendar.DATE,d);        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");        Date setDate = cal.getTime();        String openDate = "'"+dateFormat.format(setDate)+"'";        if (tmp.getText().toString().equals("")) {            Toast toast = Toast.makeText(WritePost.this, "제목을 입력해주세요", Toast.LENGTH_LONG);            toast.setGravity(Gravity.CENTER, Gravity.CENTER_HORIZONTAL, Gravity.CENTER_VERTICAL);            toast.show();        }        else if (tmp2.getText().toString().equals("")) {            Toast toast = Toast.makeText(WritePost.this, "내용을 입력해주세요", Toast.LENGTH_LONG);            toast.setGravity(Gravity.CENTER, Gravity.CENTER_HORIZONTAL, Gravity.CENTER_VERTICAL);            toast.show();        }        else {            //디비에 저장            DBHelper dbHelper = new DBHelper(this);            SQLiteDatabase db = dbHelper.getWritableDatabase();            String query = "insert into post (title, writer, content, openTime) values("+postTitle+","+postWriter+","+postContent+","+openDate+");";            db.execSQL(query);            db.close();            dbHelper.close();            //이 액티비티 끝내기            Toast toast = Toast.makeText(WritePost.this, "느린 편지를 보냈습니다", Toast.LENGTH_LONG);            toast.setGravity(Gravity.CENTER, Gravity.CENTER_HORIZONTAL, Gravity.CENTER_VERTICAL);            toast.show();            finish();        }    }}